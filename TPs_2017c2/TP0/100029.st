Object subclass: #Panaderia	instanceVariableNames: 'collection_ventas'	classVariableNames: ''	poolDictionaries: ''	category: '100029'!!Panaderia commentStamp: 'FedericodelMazo 8/20/2017 12:58' prior: 0!Modelo de PanaderiaInstance Variables:	collection_ventas <Ordered Collection de Floats>!!Panaderia methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:05'!initialize	"Metodo constructor"	collection_ventas := OrderedCollection new.! !!Panaderia methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:06'!menorVenta	"Devuelve la menor venta"	^collection_ventas min.! !!Panaderia methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:05'!agregarPedido: unPedido	"Agrega un pedido a las ventas de la panaderia"	collection_ventas add: unPedido calcularPrecio.		! !!Panaderia methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:05'!mayorVenta	"Devuelve la mayor venta"	^collection_ventas max.! !Object subclass: #Pedido	instanceVariableNames: 'dic_pedidos precios'	classVariableNames: ''	poolDictionaries: ''	category: '100029'!!Pedido commentStamp: 'FedericodelMazo 8/20/2017 13:01' prior: 0!Modelo de pedido de una panaderiaInstance Variables:	dic_pedidos <diccionario de (Producto, Cantidad pedida)>	precios <clase Precios>!!Pedido methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:06'!initialize	"Metodo constructor"	dic_pedidos := Dictionary new.	precios := nil.! !!Pedido methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:08'!calcularPrecio	"Devuelve el monto total del pedido"	| dic_precios sumatoria |	sumatoria := 0.	dic_precios := precios devolver_dic_precios. 	dic_pedidos keysDo: [:key | 		dic_precios associationAt: key ifPresent:			[sumatoria:=sumatoria + ((dic_precios at: key)*(dic_pedidos at:key))]].	^sumatoria! !!Pedido methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:07'!precios: unPrecios	"Asigna un Precios al pedido"	precios := unPrecios! !!Pedido methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:06'!agregar: unNombre cantidad: unaCantidad.	"Agrega a los pedidos un pedido de (Nombre, Cantidad)"	dic_pedidos at: unNombre put: unaCantidad.	! !Object subclass: #Precios	instanceVariableNames: 'dic_precios'	classVariableNames: ''	poolDictionaries: ''	category: '100029'!!Precios commentStamp: 'FedericodelMazo 8/20/2017 13:01' prior: 0!Modelo de preciosInstance Variables:	dic_precios <diccionario de (Producto, Precio)>!!Precios methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:07'!initialize	"Metodo constructor"	dic_precios := Dictionary new.! !!Precios methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:07'!devolver_dic_precios	"Para acceder al diccionario"	^dic_precios! !!Precios methodsFor: 'Metodos_Basicos' stamp: 'FedericodelMazo 8/20/2017 13:07'!agregar: unNombre a: unPrecio	"Agrega un (Nombre, Precio)"	dic_precios at: unNombre put: unPrecio.		! !